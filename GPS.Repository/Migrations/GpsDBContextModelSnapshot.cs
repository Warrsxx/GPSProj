// <auto-generated />
using System;
using GPS.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GPS.Repository.Migrations
{
    [DbContext(typeof(GpsDBContext))]
    partial class GpsDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GPS.Domain.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("abertura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("capital_social")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("data_situacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("data_situacao_especial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("efr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fantasia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("motivo_situacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("municipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("natureza_juridica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("situacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("situacao_especial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uf")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("GPS.Domain.atividade_principal", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("atividade_principais");
                });

            modelBuilder.Entity("GPS.Domain.atividades_secundarias", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("atividades_secundarias");
                });

            modelBuilder.Entity("GPS.Domain.billing", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<bool>("database")
                        .HasColumnType("bit");

                    b.Property<bool>("free")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("EmpresaId")
                        .IsUnique()
                        .HasFilter("[EmpresaId] IS NOT NULL");

                    b.ToTable("billing");
                });

            modelBuilder.Entity("GPS.Domain.qsa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome_rep_legal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pais_origem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("qual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("qual_rep_legal")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("qsas");
                });

            modelBuilder.Entity("GPS.Domain.atividade_principal", b =>
                {
                    b.HasOne("GPS.Domain.Empresa", "Empresa")
                        .WithMany("atividade_principais")
                        .HasForeignKey("EmpresaId");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("GPS.Domain.atividades_secundarias", b =>
                {
                    b.HasOne("GPS.Domain.Empresa", "Empresa")
                        .WithMany("atividades_secundarias")
                        .HasForeignKey("EmpresaId");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("GPS.Domain.billing", b =>
                {
                    b.HasOne("GPS.Domain.Empresa", "Empresa")
                        .WithOne("billing")
                        .HasForeignKey("GPS.Domain.billing", "EmpresaId");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("GPS.Domain.qsa", b =>
                {
                    b.HasOne("GPS.Domain.Empresa", "Empresa")
                        .WithMany("qsas")
                        .HasForeignKey("EmpresaId");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("GPS.Domain.Empresa", b =>
                {
                    b.Navigation("atividade_principais");

                    b.Navigation("atividades_secundarias");

                    b.Navigation("billing");

                    b.Navigation("qsas");
                });
#pragma warning restore 612, 618
        }
    }
}
